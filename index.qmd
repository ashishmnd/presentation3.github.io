---
title: "Data Manipulation with the R package dplyr"
format: revealjs
editor: visual
author: Ashish Mandlik
transition: slide
---

## Agenda

-   Introduction
-   Key Features of dplyr
-   Core Functions (Verbs)
-   Exercise
-   Conclusion

## Introduction

dplyr is a powerful R package designed to make data manipulation easier and more intuitive. It provides a consistent set of functions (verbs) to handle common data wrangling tasks.

## Core Verbs of dplyr

-   filter ():
-   select ():
-   mutate ():
-   summarise ():
-   arrange ():

## filter():

-   Purpose: Extract rows that meet specific conditions.
-   Syntax: filter(data, condition).
-   Example: filter(mtcars, mpg \> 20).

## select()

-   Purpose: Choose or rename specific columns.
-   Syntax: select(data, column1, column2).
-   Example: select(mtcars, mpg, hp).

## mutate()

-   Purpose: Create or transform columns.
-   Syntax: mutate(data, new_column = expression)
-   Example: mutate(mtcars, hp_per_mpg = hp / mpg)

## summarise() and group_by()

-   Purpose: Summarize data, especially after grouping.
-   Syntax:summarise(data, summary = function(column)).
-   Example: mtcars %\>% group_by(cyl) %\>% summarise(mean_mpg = mean(mpg))

## arrange()

-   Purpose: Reorder rows based on column values.
-   Syntax: arrange(data, column).
-   Example: arrange(mtcars, desc(mpg)).

## Piping with %\>%

-   when you start to combine multiple verbs.
-   Example without pipe: summarise(group_by(mtcars, cyl), mean_mpg = mean(mpg))
-   Example with pipe: mtcars %\>% group_by(cyl) %\>% summarise(mean_mpg = mean(mpg))

## Exercise

### **Scenario**

The company needs to select the best employees for a new tech project.

The project requires:

1.  Relevant roles: Software Engineers, Data Scientists, DevOps Engineers, or Front-End Developers.

2.  Years of experience: At least 5 years.

3.  Key skills: Python, AWS, or JavaScript.

The goal is to use the dplyr package to filter and rank employees based on the given criteria.

## Conclusion

dplyr simplifies data manipulation and the core verbs provide a powerful toolkit. The pipe enhances code readability.

# Thank You